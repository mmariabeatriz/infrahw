$date
	Mon Jul 14 00:02:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_r_type $end
$var wire 5 ! shamt [4:0] $end
$var wire 5 " rt [4:0] $end
$var wire 5 # rs [4:0] $end
$var wire 1 $ reg_write $end
$var wire 1 % reg_dst $end
$var wire 5 & rd [4:0] $end
$var wire 1 ' pc_write_cond $end
$var wire 1 ( pc_write $end
$var wire 2 ) pc_source [1:0] $end
$var wire 6 * opcode [5:0] $end
$var wire 1 + mem_write $end
$var wire 1 , mem_to_reg $end
$var wire 1 - mem_read $end
$var wire 1 . jump $end
$var wire 16 / immediate [15:0] $end
$var wire 6 0 funct [5:0] $end
$var wire 5 1 current_state [4:0] $end
$var wire 1 2 branch $end
$var wire 1 3 alu_zero $end
$var wire 1 4 alu_src $end
$var wire 1 5 alu_overflow $end
$var wire 2 6 alu_op [1:0] $end
$var wire 4 7 alu_control [3:0] $end
$var wire 26 8 address [25:0] $end
$var reg 1 9 clk $end
$var reg 1 : div_zero $end
$var reg 32 ; instruction [31:0] $end
$var reg 1 < overflow $end
$var reg 1 = reset $end
$var reg 1 > zero_flag $end
$scope module uut $end
$var wire 1 9 clk $end
$var wire 5 ? current_state [4:0] $end
$var wire 1 : div_zero $end
$var wire 32 @ instruction [31:0] $end
$var wire 1 < overflow $end
$var wire 1 = reset $end
$var wire 1 > zero_flag $end
$var parameter 6 A FUNCT_ADD $end
$var parameter 6 B FUNCT_AND $end
$var parameter 6 C FUNCT_DIV $end
$var parameter 6 D FUNCT_JR $end
$var parameter 6 E FUNCT_MFHI $end
$var parameter 6 F FUNCT_MFLO $end
$var parameter 6 G FUNCT_MULT $end
$var parameter 6 H FUNCT_SLL $end
$var parameter 6 I FUNCT_SLT $end
$var parameter 6 J FUNCT_SRA $end
$var parameter 6 K FUNCT_SUB $end
$var parameter 6 L FUNCT_XCHG $end
$var parameter 6 M OP_ADDI $end
$var parameter 6 N OP_BEQ $end
$var parameter 6 O OP_BNE $end
$var parameter 6 P OP_J $end
$var parameter 6 Q OP_JAL $end
$var parameter 6 R OP_LB $end
$var parameter 6 S OP_LUI $end
$var parameter 6 T OP_LW $end
$var parameter 6 U OP_SB $end
$var parameter 6 V OP_SLLM $end
$var parameter 6 W OP_SW $end
$var parameter 6 X OP_TYPE_R $end
$var parameter 5 Y ST_ADD $end
$var parameter 5 Z ST_ADDI $end
$var parameter 5 [ ST_AND $end
$var parameter 5 \ ST_BEQ $end
$var parameter 5 ] ST_BNE $end
$var parameter 5 ^ ST_DECODE $end
$var parameter 5 _ ST_DIV $end
$var parameter 5 ` ST_DIV0 $end
$var parameter 5 a ST_FETCH $end
$var parameter 5 b ST_J $end
$var parameter 5 c ST_JAL $end
$var parameter 5 d ST_JR $end
$var parameter 5 e ST_LB $end
$var parameter 5 f ST_LUI $end
$var parameter 5 g ST_LW $end
$var parameter 5 h ST_MFHI $end
$var parameter 5 i ST_MFLO $end
$var parameter 5 j ST_MULT $end
$var parameter 5 k ST_OPCODE404 $end
$var parameter 5 l ST_OVERFLOW $end
$var parameter 5 m ST_RESET $end
$var parameter 5 n ST_SB $end
$var parameter 5 o ST_SLL $end
$var parameter 5 p ST_SLLM $end
$var parameter 5 q ST_SLT $end
$var parameter 5 r ST_SRA $end
$var parameter 5 s ST_SUB $end
$var parameter 5 t ST_SW $end
$var parameter 5 u ST_XCHG $end
$var reg 26 v address [25:0] $end
$var reg 4 w alu_control [3:0] $end
$var reg 4 x alu_op [3:0] $end
$var reg 1 5 alu_overflow $end
$var reg 1 4 alu_src $end
$var reg 1 3 alu_zero $end
$var reg 1 2 branch $end
$var reg 5 y counter [4:0] $end
$var reg 6 z funct [5:0] $end
$var reg 16 { immediate [15:0] $end
$var reg 1 . jump $end
$var reg 2 | load_size_control [1:0] $end
$var reg 1 - mem_read $end
$var reg 1 , mem_to_reg $end
$var reg 1 + mem_write $end
$var reg 6 } opcode [5:0] $end
$var reg 2 ~ pc_source [1:0] $end
$var reg 1 ( pc_write $end
$var reg 1 ' pc_write_cond $end
$var reg 5 !" rd [4:0] $end
$var reg 1 % reg_dst $end
$var reg 1 $ reg_write $end
$var reg 5 "" rs [4:0] $end
$var reg 5 #" rt [4:0] $end
$var reg 5 $" shamt [4:0] $end
$var reg 2 %" shift_amt_selector [1:0] $end
$var reg 5 &" state [4:0] $end
$var reg 2 '" store_size_control [1:0] $end
$scope task decode_instruction $end
$upscope $end
$scope task handle_add_state $end
$upscope $end
$scope task handle_addi_state $end
$upscope $end
$scope task handle_and_state $end
$upscope $end
$scope task handle_beq_state $end
$upscope $end
$scope task handle_bne_state $end
$upscope $end
$scope task handle_decode_state $end
$upscope $end
$scope task handle_div0_state $end
$upscope $end
$scope task handle_div_state $end
$upscope $end
$scope task handle_fetch_state $end
$upscope $end
$scope task handle_j_state $end
$upscope $end
$scope task handle_jal_state $end
$upscope $end
$scope task handle_jr_state $end
$upscope $end
$scope task handle_lb_state $end
$upscope $end
$scope task handle_lui_state $end
$upscope $end
$scope task handle_lw_state $end
$upscope $end
$scope task handle_mfhi_state $end
$upscope $end
$scope task handle_mflo_state $end
$upscope $end
$scope task handle_mult_state $end
$upscope $end
$scope task handle_opcode404_state $end
$upscope $end
$scope task handle_overflow_state $end
$upscope $end
$scope task handle_reset_state $end
$upscope $end
$scope task handle_sb_state $end
$upscope $end
$scope task handle_sll_state $end
$upscope $end
$scope task handle_sllm_state $end
$upscope $end
$scope task handle_slt_state $end
$upscope $end
$scope task handle_sra_state $end
$upscope $end
$scope task handle_sub_state $end
$upscope $end
$scope task handle_sw_state $end
$upscope $end
$scope task handle_xchg_state $end
$upscope $end
$scope task reset_control_signals $end
$upscope $end
$upscope $end
$scope task execute_instruction $end
$var reg 32 (" instr [31:0] $end
$upscope $end
$scope task reset_system $end
$upscope $end
$scope task wait_cycles $end
$var integer 32 )" cycles [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1110 u
b10111 t
b1101 s
b1100 r
b1011 q
b10010 p
b1010 o
b10110 n
b0 m
b11010 l
b11011 k
b110 j
b1001 i
b1000 h
b10101 g
b10100 f
b10011 e
b111 d
b11001 c
b11000 b
b1 a
b11100 `
b101 _
b10 ^
b10001 ]
b10000 \
b100 [
b1111 Z
b11 Y
b0 X
b101011 W
b1 V
b101000 U
b100011 T
b1111 S
b100000 R
b11 Q
b10 P
b101 O
b100 N
b1000 M
b101 L
b100010 K
b11 J
b101010 I
b0 H
b11000 G
b10010 F
b10000 E
b1000 D
b11010 C
b100100 B
b100000 A
$end
#0
$dumpvars
bx )"
bx ("
bx '"
b0 &"
bx %"
b0 $"
b0 #"
b0 ""
b0 !"
bx ~
b0 }
bx |
b0 {
b0 z
bx y
bx x
bx w
b0 v
b0 @
b0 ?
0>
1=
0<
b0 ;
0:
09
b0 8
bx 7
bx 6
x5
x4
x3
x2
b0 1
b0 0
b0 /
x.
x-
x,
x+
b0 *
bx )
x(
x'
b0 &
x%
x$
b0 #
b0 "
b0 !
$end
#5000
b0 y
19
#10000
09
#15000
19
#20000
09
0=
#25000
b0 6
b1 1
b1 ?
b1 &"
05
03
b0 7
b0 w
b0 %"
b0 )
b0 ~
0'
0(
b0 '"
b0 |
0$
04
0+
b0 x
0,
0-
02
0.
0%
19
#30000
b10000000000001100 8
b10000000000001100 v
b1100 /
b1100 {
b1100 0
b1100 z
b1 "
b1 #"
b1000 *
b1000 }
09
b11 )"
b100000000000010000000000001100 ;
b100000000000010000000000001100 @
b100000000000010000000000001100 ("
#35000
b10 1
b10 ?
b10 &"
1(
1-
19
#40000
09
#45000
b1111 1
b1111 ?
b1111 &"
19
#50000
09
#55000
b10 6
b100000000000001110 8
b100000000000001110 v
b1110 /
b1110 {
b1110 0
b1110 z
b10 "
b10 #"
b1 1
b1 ?
b1 &"
1$
b10 x
14
b100000000000100000000000001110 ;
b100000000000100000000000001110 @
b100000000000100000000000001110 ("
19
#60000
09
#65000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#70000
09
#75000
b1111 1
b1111 ?
b1111 &"
19
#80000
09
#85000
b10 6
b1000100001100000100100 8
b1000100001100000100100 v
b1100000100100 /
b1100000100100 {
b100100 0
b100100 z
b11 &
b11 !"
b1 #
b1 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b1000100001100000100100 ;
b1000100001100000100100 @
b1000100001100000100100 ("
19
#90000
09
#95000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#100000
09
#105000
b100 1
b100 ?
b100 &"
19
#110000
09
#115000
b1 6
b10000000000010101 8
b10000000000010101 v
b10101 /
b10101 {
b10101 0
b10101 z
b0 &
b0 !"
b1 "
b1 #"
b0 #
b0 ""
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b1 7
b1 w
b1 x
1%
b100000000000010000000000010101 ;
b100000000000010000000000010101 @
b100000000000010000000000010101 ("
19
#120000
09
#125000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#130000
09
#135000
b1111 1
b1111 ?
b1111 &"
19
#140000
09
#145000
b10 6
b100000000000000111 8
b100000000000000111 v
b111 /
b111 {
b111 0
b111 z
b10 "
b10 #"
b1 1
b1 ?
b1 &"
1$
b10 x
14
b100000000000100000000000000111 ;
b100000000000100000000000000111 @
b100000000000100000000000000111 ("
19
#150000
09
#155000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#160000
09
#165000
b1111 1
b1111 ?
b1111 &"
19
#170000
09
#175000
b10 6
b1000100000000000011010 8
b1000100000000000011010 v
b11010 /
b11010 {
b11010 0
b11010 z
b1 #
b1 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b1000100000000000011010 ;
b1000100000000000011010 @
b1000100000000000011010 ("
19
#180000
09
#185000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#190000
09
#195000
b101 1
b101 ?
b101 &"
19
#200000
09
#205000
b1 6
b1100000010000 8
b1100000010000 v
b1100000010000 /
b1100000010000 {
b10000 0
b10000 z
b11 &
b11 !"
b0 "
b0 #"
b0 #
b0 ""
b1 1
b1 ?
b1 &"
b1001 7
b1001 w
b1001 x
b1100000010000 ;
b1100000010000 @
b1100000010000 ("
19
#210000
09
#215000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
b0 x
1-
19
#220000
09
#225000
b1000 1
b1000 ?
b1000 &"
19
#230000
09
#235000
b10000000010010 8
b10000000010010 v
b10000000010010 /
b10000000010010 {
b10010 0
b10010 z
b100 &
b100 !"
b1 1
b1 ?
b1 &"
1$
b1100 7
b1100 w
b1100 x
1%
b10000000010010 ;
b10000000010010 @
b10000000010010 ("
19
#240000
09
#245000
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#250000
09
#255000
b1001 1
b1001 ?
b1001 &"
19
#260000
09
#265000
b1 6
b10000000000000100 8
b10000000000000100 v
b100 /
b100 {
b100 0
b100 z
b0 &
b0 !"
b1 "
b1 #"
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b1101 7
b1101 w
b1101 x
1%
b100000000000010000000000000100 ;
b100000000000010000000000000100 @
b100000000000010000000000000100 ("
19
#270000
09
#275000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#280000
09
#285000
b1111 1
b1111 ?
b1111 &"
19
#290000
09
#295000
b10 6
b100000000000000011 8
b100000000000000011 v
b11 /
b11 {
b11 0
b11 z
b10 "
b10 #"
b1 1
b1 ?
b1 &"
1$
b10 x
14
b100000000000100000000000000011 ;
b100000000000100000000000000011 @
b100000000000100000000000000011 ("
19
#300000
09
#305000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#310000
09
#315000
b1111 1
b1111 ?
b1111 &"
19
#320000
09
#325000
b10 6
b1000100000000000011000 8
b1000100000000000011000 v
b11000 /
b11000 {
b11000 0
b11000 z
b1 #
b1 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b1000100000000000011000 ;
b1000100000000000011000 @
b1000100000000000011000 ("
19
#330000
09
#335000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#340000
09
#345000
b110 1
b110 ?
b110 &"
19
#350000
09
#355000
b10 6
b1000000010000 8
b1000000010000 v
b1000000010000 /
b1000000010000 {
b10000 0
b10000 z
b10 &
b10 !"
b0 "
b0 #"
b0 #
b0 ""
b1 1
b1 ?
b1 &"
b1010 7
b1010 w
b1010 x
b1000000010000 ;
b1000000010000 @
b1000000010000 ("
19
#360000
09
#365000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
b0 x
1-
19
#370000
09
#375000
b1000 1
b1000 ?
b1000 &"
19
#380000
09
#385000
b100000010010 8
b100000010010 v
b100000010010 /
b100000010010 {
b10010 0
b10010 z
b1 &
b1 !"
b1 1
b1 ?
b1 &"
1$
b1100 7
b1100 w
b1100 x
1%
b100000010010 ;
b100000010010 @
b100000010010 ("
19
#390000
09
#395000
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#400000
09
#405000
b1001 1
b1001 ?
b1001 &"
19
#410000
09
#415000
b1 6
b110000000000100000 8
b110000000000100000 v
b100000 /
b100000 {
b100000 0
b100000 z
b0 &
b0 !"
b11 "
b11 #"
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b1101 7
b1101 w
b1101 x
1%
b100000000000110000000000100000 ;
b100000000000110000000000100000 @
b100000000000110000000000100000 ("
19
#420000
09
#425000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#430000
09
#435000
b1111 1
b1111 ?
b1111 &"
19
#440000
09
#445000
b10 6
b110001100100000000 8
b110001100100000000 v
b1100100000000 /
b1100100000000 {
b0 0
b0 z
b100 !
b100 $"
b11 &
b11 !"
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b110001100100000000 ;
b110001100100000000 @
b110001100100000000 ("
19
#450000
09
#455000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#460000
09
#465000
b1010 1
b1010 ?
b1010 &"
19
#470000
09
#475000
b10000000000000011 8
b10000000000000011 v
b11 /
b11 {
b11 0
b11 z
b0 !
b0 $"
b0 &
b0 !"
b1 "
b1 #"
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
b11 %"
1$
b100 7
b100 w
b100 x
1%
b100000000000010000000000000011 ;
b100000000000010000000000000011 @
b100000000000010000000000000011 ("
19
#480000
09
#485000
b10 1
b10 ?
b10 &"
b0 7
b0 w
b0 %"
1(
0$
b0 x
1-
0%
19
#490000
09
#495000
b1111 1
b1111 ?
b1111 &"
19
#500000
09
#505000
b10 6
b100000000000000100 8
b100000000000000100 v
b100 /
b100 {
b100 0
b100 z
b10 "
b10 #"
b1 1
b1 ?
b1 &"
1$
b10 x
14
b100000000000100000000000000100 ;
b100000000000100000000000000100 @
b100000000000100000000000000100 ("
19
#510000
09
#515000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#520000
09
#525000
b1111 1
b1111 ?
b1111 &"
19
#530000
09
#535000
b10 6
b1000100001100000101010 8
b1000100001100000101010 v
b1100000101010 /
b1100000101010 {
b101010 0
b101010 z
b11 &
b11 !"
b1 #
b1 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b1000100001100000101010 ;
b1000100001100000101010 @
b1000100001100000101010 ("
19
#540000
09
#545000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#550000
09
#555000
b1011 1
b1011 ?
b1011 &"
19
#560000
09
#565000
b11 6
b10000100001100000101010 8
b10000100001100000101010 v
b10 #
b10 ""
b1 1
b1 ?
b1 &"
1$
b111 7
b111 w
b111 x
1%
b10000100001100000101010 ;
b10000100001100000101010 @
b10000100001100000101010 ("
19
#570000
09
#575000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#580000
09
#585000
b1011 1
b1011 ?
b1011 &"
19
#590000
09
#595000
b11 6
b110000000000000001 8
b110000000000000001 v
b1 /
b1 {
b1 0
b1 z
b0 &
b0 !"
b11 "
b11 #"
b0 #
b0 ""
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b111 7
b111 w
b111 x
1%
b100000000000110000000000000001 ;
b100000000000110000000000000001 @
b100000000000110000000000000001 ("
19
#600000
09
#605000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#610000
09
#615000
b1111 1
b1111 ?
b1111 &"
19
#620000
09
#625000
b10 6
b10000010001100000101010 8
b10000010001100000101010 v
b1100000101010 /
b1100000101010 {
b101010 0
b101010 z
b11 &
b11 !"
b1 "
b1 #"
b10 #
b10 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b10000010001100000101010 ;
b10000010001100000101010 @
b10000010001100000101010 ("
19
#630000
09
#635000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#640000
09
#645000
b1011 1
b1011 ?
b1011 &"
19
#650000
09
#655000
b11 6
b11111111111111010 8
b11111111111111010 v
b1111111111111010 /
b1111111111111010 {
b111010 0
b111010 z
b11111 !
b11111 $"
b11111 &
b11111 !"
b0 #
b0 ""
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b111 7
b111 w
b111 x
1%
b100000000000011111111111111010 ;
b100000000000011111111111111010 @
b100000000000011111111111111010 ("
19
#660000
09
#665000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#670000
09
#675000
b1111 1
b1111 ?
b1111 &"
19
#680000
09
#685000
b10 6
b10000100001000011 8
b10000100001000011 v
b100001000011 /
b100001000011 {
b11 0
b11 z
b1 !
b1 $"
b1 &
b1 !"
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b10000100001000011 ;
b10000100001000011 @
b10000100001000011 ("
19
#690000
09
#695000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#700000
09
#705000
b1100 1
b1100 ?
b1100 &"
19
#710000
09
#715000
b1 6
b10000000000001111 8
b10000000000001111 v
b1111 /
b1111 {
b1111 0
b1111 z
b0 !
b0 $"
b0 &
b0 !"
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
b11 %"
1$
b101 7
b101 w
b101 x
1%
b100000000000010000000000001111 ;
b100000000000010000000000001111 @
b100000000000010000000000001111 ("
19
#720000
09
#725000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
b0 %"
1(
0$
b0 x
1-
0%
19
#730000
09
#735000
b1111 1
b1111 ?
b1111 &"
19
#740000
09
#745000
b10 6
b100000000000001010 8
b100000000000001010 v
b1010 /
b1010 {
b1010 0
b1010 z
b10 "
b10 #"
b1 1
b1 ?
b1 &"
1$
b10 x
14
b100000000000100000000000001010 ;
b100000000000100000000000001010 @
b100000000000100000000000001010 ("
19
#750000
09
#755000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#760000
09
#765000
b1111 1
b1111 ?
b1111 &"
19
#770000
09
#775000
b10 6
b1000100001100000100010 8
b1000100001100000100010 v
b1100000100010 /
b1100000100010 {
b100010 0
b100010 z
b11 &
b11 !"
b1 #
b1 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b1000100001100000100010 ;
b1000100001100000100010 @
b1000100001100000100010 ("
19
#780000
09
#785000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#790000
09
#795000
b1101 1
b1101 ?
b1101 &"
19
#800000
09
#805000
b10 6
b10000000000000010 8
b10000000000000010 v
b10 /
b10 {
b10 0
b10 z
b0 &
b0 !"
b1 "
b1 #"
b0 #
b0 ""
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b110 7
b110 w
b110 x
1%
b100000000000010000000000000010 ;
b100000000000010000000000000010 @
b100000000000010000000000000010 ("
19
#810000
09
#815000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#820000
09
#825000
b1111 1
b1111 ?
b1111 &"
19
#830000
09
#835000
b10 6
b100000000000000011 8
b100000000000000011 v
b11 /
b11 {
b11 0
b11 z
b10 "
b10 #"
b1 1
b1 ?
b1 &"
1$
b10 x
14
b100000000000100000000000000011 ;
b100000000000100000000000000011 @
b100000000000100000000000000011 ("
19
#840000
09
#845000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#850000
09
#855000
b1111 1
b1111 ?
b1111 &"
19
#860000
09
#865000
b10 6
b1000100000000000000101 8
b1000100000000000000101 v
b101 /
b101 {
b101 0
b101 z
b1 #
b1 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b1000100000000000000101 ;
b1000100000000000000101 @
b1000100000000000000101 ("
19
#870000
09
#875000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#880000
09
#885000
b1110 1
b1110 ?
b1110 &"
19
#890000
09
#895000
b11 6
b10000000000000011 8
b10000000000000011 v
b11 /
b11 {
b11 0
b11 z
b1 "
b1 #"
b0 #
b0 ""
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b1011 7
b1011 w
b1011 x
1%
b100000000000010000000000000011 ;
b100000000000010000000000000011 @
b100000000000010000000000000011 ("
19
#900000
09
#905000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#910000
09
#915000
b1111 1
b1111 ?
b1111 &"
19
#920000
09
#925000
b10 6
b100000000000000100 8
b100000000000000100 v
b100 /
b100 {
b100 0
b100 z
b10 "
b10 #"
b1 1
b1 ?
b1 &"
1$
b10 x
14
b100000000000100000000000000100 ;
b100000000000100000000000000100 @
b100000000000100000000000000100 ("
19
#930000
09
#935000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#940000
09
#945000
b1111 1
b1111 ?
b1111 &"
19
#950000
09
#955000
b10 6
b1000100001100000100000 8
b1000100001100000100000 v
b1100000100000 /
b1100000100000 {
b100000 0
b100000 z
b11 &
b11 !"
b1 #
b1 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b1000100001100000100000 ;
b1000100001100000100000 @
b1000100001100000100000 ("
19
#960000
09
#965000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#970000
09
#975000
b11 1
b11 ?
b11 &"
19
#980000
09
#985000
b10 6
b111110000000000010100 8
b111110000000000010100 v
b10100 /
b10100 {
b10100 0
b10100 z
b0 &
b0 !"
b11111 "
b11111 #"
b0 #
b0 ""
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
1$
b10 7
b10 w
b10 x
1%
b100000000111110000000000010100 ;
b100000000111110000000000010100 @
b100000000111110000000000010100 ("
19
#990000
09
#995000
b0 6
b10 1
b10 ?
b10 &"
b0 7
b0 w
1(
0$
b0 x
1-
0%
19
#1000000
09
#1005000
b1111 1
b1111 ?
b1111 &"
19
#1010000
09
#1015000
b10 6
b11111000000000000000001000 8
b11111000000000000000001000 v
b1000 /
b1000 {
b1000 0
b1000 z
b0 "
b0 #"
b11111 #
b11111 ""
b0 *
b0 }
b1 1
b1 ?
b1 &"
1$
b10 x
14
b11111000000000000000001000 ;
b11111000000000000000001000 @
b11111000000000000000001000 ("
19
#1020000
09
#1025000
b0 6
b10 1
b10 ?
b10 &"
1(
0$
04
b0 x
1-
19
#1030000
09
#1035000
b111 1
b111 ?
b111 &"
19
#1040000
09
#1045000
b10100 8
b10100 v
b10100 /
b10100 {
b10100 0
b10100 z
b0 #
b0 ""
b1000 *
b1000 }
b1 1
b1 ?
b1 &"
b10 )
b10 ~
b100000000000000000000000010100 ;
b100000000000000000000000010100 @
b100000000000000000000000010100 ("
19
#1050000
09
#1055000
b10 1
b10 ?
b10 &"
b0 )
b0 ~
1(
1-
19
#1060000
09
#1065000
b1111 1
b1111 ?
b1111 &"
19
#1070000
09
#1075000
b10 6
b1 1
b1 ?
b1 &"
1$
b10 x
14
19
